<?php

App\Http\Livewire\App\DummyModel;

use App\DummyModel;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Support\Facades\Gate;
use Livewire\Component;
use Tanthammar\TallDataTable\TableComponent;
use App\Http\Livewire\Traits\Published;
use Tanthammar\TallDataTable\Traits\BuildQuery;
use App\Http\Livewire\Traits\EmailModal;
use Tanthammar\TallDataTable\Traits\Searchable;
use Tanthammar\TallDataTable\Traits\DbSearchable;
use Tanthammar\TallDataTable\Views\Boolean;
use Tanthammar\TallDataTable\Views\Column;

class DummyComponent extends Component
{
    use TableComponent, EmailModal, Searchable, DbSearchable, BuildQuery;

    public function mount()
    {
        Gate::authorize('viewAny dummymodel');
        $this->setupTable();
        $this->fill([
            'title' => trans('crud.dummymodel.title'),
            'sortField' => 'name',
            'sortDirection' => 'asc',
            'routePath' => 'dummymodels',
            'createButton' =>  Gate::allows('create dummymodel'),
        ]);
    }

    public function query(): Builder
    {
        $query = DummyModel::select('id', 'name', 'description', 'published');
        return $this->generate($query);
    }

    public function render()
    {
        return view($this->view(), [
            'groups' => $this->groups(),
            'models' => $this->DB_searchable(
                $this->query(),
                $contains = ['name', 'description'],
                $exact = ['id'],
                $numeric = null,
                $dates = null,
            ),
        ]);
    }

    public function columns()
    {
        return [
            Column::make('Nr', 'id')->searchable()->sortable(),
            Column::make(trans('fields.name'), 'name')->class('td-title')->searchable()->sortable(),
            Column::make(trans('fields.description'), 'description')->searchable()->sortable(),
            Published::icon(),
        ];
    }
}
